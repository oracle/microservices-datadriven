-- main support_ticket table
create table support_ticket (
    id           number generated by default as identity primary key,
    title        varchar2(255) not null,
    description  varchar2(2000) not null,
    embedding    vector(1024, FLOAT32) annotations(Distance 'COSINE', IndexType 'IVF')
);

-- Vector index for Ticket Vectors
create vector index if not exists ticket_vector_ivf_idx on support_ticket (embedding) organization neighbor partitions
distance COSINE
with target accuracy 90
parameters (type IVF, neighbor partitions 10);

-- Join table for related tickets
create table related_ticket (
    ticket_id       number not null,
    related         number not null,
    constraint pk_support_ticket_relation primary key (ticket_id, related),
    constraint fk_ticket_id foreign key (ticket_id)
     references support_ticket(id) on delete cascade
);

-- JSON Relational duality view
create or replace force editionable json relational duality view ticket_dv as support_ticket @insert @update @delete {
    _id : id
    title
    description
    embedding
    relatedTickets : related_ticket @insert @update {
        relatedTicketId : related
    }
};
