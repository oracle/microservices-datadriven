#!/bin/bash
# Copyright (c) 2021 Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.


if ! (return 0 2>/dev/null); then
  echo "ERROR: Usage 'source deploy_functions.env'"
  return 1
fi


# k8s-deploy
#   Deploy a microservice
#   $1: Space separated list of files to be deployed (in order of deployment)
#
function k8s-deploy() {
  # Fail on error or inadvertently referencing undefined variables
  set -eu

  # Locate the script directory.  All the files are there.
  local SCRIPT_DIR=$(dirname ${BASH_SOURCE[0]})
  if ! test -d $SCRIPT_DIR; then
    echo "ERROR: Script directory does not exist"
    return 1
  fi

  # First parameter is required
  local DEPLOYMENT_FILES="$1"

  local DEPLOYED_DIR=$SCRIPT_DIR/.deployed

  local df
  for df in $DEPLOYMENT_FILES; do
    mkdir -p $DEPLOYED_DIR
    # Expand the deployment file into the deployed directory
    eval "cat >$DEPLOYED_DIR/.$df <<!
$(<$SCRIPT_DIR/$df)
!
"

    # Deploy
    kubectl apply -f $DEPLOYED_DIR/$df -n msdataworkshop
  done
}


# k8s-undeploy
#   Undeploy k8s resources previously deployed by k8s_deploy
#
function k8s-undeploy() {
  # Fail on error or inadvertently referencing undefined variables
  set -eu

  # Locate the script directory.  All the files are there.
  local SCRIPT_DIR=$(dirname ${BASH_SOURCE[0]})
  if ! test -d $SCRIPT_DIR; then
    echo "ERROR: Script directory does not exist"
    return 1
  fi

  local DEPLOYED_DIR=$SCRIPT_DIR/.deployed
  if ! test -d $DEPLOYED_DIR; then
    # Nothing deployed and so noting to do
    return
  fi
  cd $DEPLOYED_DIR

  local df
  for df in $(ls -r); do
    # Undeploy
    kubectl delete -f $df -n msdataworkshop
    rm $df
  done

  rm -f $DEPLOYED_DIR
}

export -f k8s-deploy
export -f k8s-undeploy