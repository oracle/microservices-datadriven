#!/bin/bash
# Copyright (c) 2021 Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

if ! (return 0 2>/dev/null); then
  echo "ERROR: Usage 'source deploy_functions.env'"
  return 1
fi

# k8s-deploy
#   Deploy a microservice
#   $1: The directory containing the deployment scripts
#   $2: K8S namespace in which to deploy
#   $3: Space separated list of files to be deployed (in order of deployment)
#   $4: Required environment variables
#
function k8s-deploy() {
  # Fail on error
  set -eu

  SCRIPT_DIR="$1"
  if ! test -d $SCRIPT_DIR; then
    echo "ERROR: Script directory SCRIPT_DIR does not exist"
    return 1
  fi

  K8S_NAMESPACE="${2-msdataworkshop}"
  if test -z $K8S_NAMESPACE; then
    echo "ERROR: K8S namespace was not specified"
    return 1
  fi

  DEP_FILES="$3"
  REQ_VARIABLES="$4"

  for v in $REQ_VARIABLES; do
    if test -z "${!v-}" ; then
        echo "Error: $v env variable needs to be set!"
        return 1
    fi
  done

  for df in $DEP_FILES; do
    # Expand the template deployment file if it exists
    if test -f template-$df; then
      eval "cat >$SCRIPT_DIR/$df <<!
$(<$SCRIPT_DIR/template-$df)
!
"
    fi

    # Deploy
    kubectl apply -f $SCRIPT_DIR/$df -n $K8S_NAMESPACE
  done
}


# k8s-undeploy
#   Undeploy a microservice
#   $1: The directory containing the deployment scripts
#   $2: K8S namespace in which they are deploy
#   $3: Space separated list of files to be undeployed (in order of undeployment)
#
function k8s-undeploy() {
  # Fail on error
  set -xu

  SCRIPT_DIR="$1"
  if ! test -d $SCRIPT_DIR; then
    echo "ERROR: Script directory SCRIPT_DIR does not exist"
    return 1
  fi

  K8S_NAMESPACE="$2"
  if test -z $K8S_NAMESPACE; then
    echo "ERROR: K8S namespace was not specified"
    return 1
  fi

  DEP_FILES="$3"

  for df in $DEP_FILES; do
    # Undeploy
    kubectl delete -f $SCRIPT_DIR/$df -n $K8S_NAMESPACE
  done
}

export -f k8s-deploy
export -f k8s-undeploy