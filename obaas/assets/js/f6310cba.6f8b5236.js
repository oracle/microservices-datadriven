"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[775],{1171:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>r});const o=JSON.parse('{"id":"deploy/buildpushapp","title":"Build and Push the application","description":"Build and Push the application","source":"@site/docs/deploy/buildpushapp.md","sourceDirName":"deploy","slug":"/deploy/buildpushapp","permalink":"/microservices-datadriven/obaas/docs/deploy/buildpushapp","draft":false,"unlisted":false,"editUrl":"https://github.com/oracle/microservices-datadriven/tree/main/docs-source/site/docs/deploy/buildpushapp.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Build and Push the application","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Application Database Access","permalink":"/microservices-datadriven/obaas/docs/deploy/dbaccess"},"next":{"title":"Deploy the Application","permalink":"/microservices-datadriven/obaas/docs/deploy/deployapp"}}');var a=i(4848),t=i(8453);const s={title:"Build and Push the application",sidebar_position:3},l=void 0,d={},r=[{value:"Build and Push the application",id:"build-and-push-the-application",level:2},{value:"Add JKube to the <code>pom.xml</code>",id:"add-jkube-to-the-pomxml",level:2},{value:"Build and push the application",id:"build-and-push-the-application-1",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"build-and-push-the-application",children:"Build and Push the application"}),"\n",(0,a.jsx)(n.admonition,{type:"important",children:(0,a.jsx)(n.p,{children:"This content is TBD"})}),"\n",(0,a.jsx)(n.p,{children:"This section explains how to build and push the container image for deployment on OBaaS. The following are required:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Access to a container image repository (e.g., OCIR or another approved registry)"}),"\n",(0,a.jsx)(n.li,{children:"Docker running locally (and authenticated to your registry)"}),"\n"]}),"\n",(0,a.jsxs)(n.h2,{id:"add-jkube-to-the-pomxml",children:["Add JKube to the ",(0,a.jsx)(n.code,{children:"pom.xml"})]}),"\n",(0,a.jsxs)(n.p,{children:["The image will be built using JKube and Maven. Add the following plugin into the ",(0,a.jsx)(n.code,{children:"pom.xml"})," for the application."]}),"\n",(0,a.jsx)(n.p,{children:"The following needs to be updated to reflect your environment:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Image configuration, a mandatory, unique docker repository name. This can include registry and tag parts, but also placeholder parameters. example below has the following value ",(0,a.jsx)(n.code,{children:"region/tenancy/repository/phonebook:${project.version}"})]}),"\n",(0,a.jsxs)(n.li,{children:["The base image which should be used for this image. In this example ",(0,a.jsx)(n.code,{children:"ghcr.io/oracle/openjdk-image-obaas:21"})," is used."]}),"\n",(0,a.jsxs)(n.li,{children:["assembly, mode how the assembled files should be collected. In this example files are simple copied, ",(0,a.jsx)(n.code,{children:"dir"})]}),"\n",(0,a.jsxs)(n.li,{children:["cmd, A command to execute by default. in the example below ",(0,a.jsx)(n.code,{children:"java -jar /deployments/${project.artifactId}-${project.version}.jar"})," will be executed."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Refer to the ",(0,a.jsx)(n.a,{href:"https://eclipse.dev/jkube/docs/kubernetes-maven-plugin/",children:"documentation for JKube"})," for more configuration options."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:"<plugin>\n  <groupId>org.eclipse.jkube</groupId>\n  <artifactId>kubernetes-maven-plugin</artifactId>\n  <version>1.18.1</version>\n  <configuration>\n    <images>\n      <image>\n        <name>sjc.ocir.io/maacloud/repository/phonebook:${project.version}</name>\n        <build>\n          <from>ghcr.io/oracle/openjdk-image-obaas:21</from>\n          <assembly>\n            <mode>dir</mode>\n            <targetDir>/deployments</targetDir>\n          </assembly>\n          <cmd>java -jar /deployments/${project.artifactId}-${project.version}.jar</cmd>\n        </build>\n      </image>\n    </images>\n  </configuration>\n</plugin>\n"})}),"\n",(0,a.jsx)(n.h2,{id:"build-and-push-the-application-1",children:"Build and push the application"}),"\n",(0,a.jsx)(n.p,{children:"To build and push the application execute the following command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"mvn clean package k8s:build k8s:push\n"})}),"\n",(0,a.jsx)(n.p,{children:"If the build and push is successful then you shuould get a message similar to this:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-log",children:"[INFO] k8s: Pushed sjc.ocir.io/maacloud/phonebook/phonebook:0.0.1-SNAPSHOT in 4 minutes and 2 seconds \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  04:07 min\n[INFO] Finished at: 2025-09-24T12:18:53-05:00\n[INFO] ------------------------------------------------------------------------\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var o=i(6540);const a={},t=o.createContext(a);function s(e){const n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);