apiVersion: apps/v1
kind: Deployment
metadata:
  name: travelagency-springboot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: travelagency
  template:
    metadata:
      labels:
        app: travelagency
        version: springboot
    spec:
      containers:
      - name: travelagency
        image: %DOCKER_REGISTRY%/travelagency-springboot:0.1
        imagePullPolicy: Always
        env:
        - name: LOG_LEVEL
          value: "DEBUG"
        - name: server_port
          value: "8080"
        - name: db_user
          value: "travelagencyuser"
        - name: spring.datasource.username
          value: "travelagencyuser"
        - name: db_url
          value: "jdbc:oracle:thin:@%INVENTORY_PDB_NAME%_tp?TNS_ADMIN=/msdataworkshop/creds"
        - name: spring.datasource.url
          value: "jdbc:oracle:thin:@%INVENTORY_PDB_NAME%_tp?TNS_ADMIN=/msdataworkshop/creds"
        - name: db_queueOwner
          value: "travelagencyuser"
        - name: db_travelagencyQueueName
          value: "travelagencyqueue"
        - name: db_travelagencyQueueName
          value: "travelagencyqueue"
        - name: OCI_REGION
          value: "%OCI_REGION%"
        - name: VAULT_SECRET_OCID
          value: "%VAULT_SECRET_OCID%"
        - name: db_password
          valueFrom:
            secretKeyRef:
              name: dbuser
              key: dbpassword
              optional: true #not needed/used if using VAULT_SECRET_OCID exists
        - name: spring.datasource.password
          valueFrom:
            secretKeyRef:
              name: dbuser
              key: dbpassword
              optional: true #not needed/used if using VAULT_SECRET_OCID exists
        volumeMounts:
        - name: creds
          mountPath: /msdataworkshop/creds
        ports:
        - containerPort: 8080
      restartPolicy: Always
      volumes:
      - name: creds
        secret:
          secretName: db-wallet-secret
      