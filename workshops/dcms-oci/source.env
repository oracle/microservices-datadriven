#!/bin/bash
# Copyright (c) 2021 Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

# Make sure this is run via source or .
if ! (return 0 2>/dev/null); then
  echo "ERROR: Usage 'source setup.sh'"
  exit
fi


# Get the code location
MSDD_CODE="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../.." &> /dev/null && pwd )"
# Double check we have the right location
if ! test -d $MSDD_CODE/../microservices-datadriven; then
  echo "ERROR: This script $MSDD_CODE is in the wrong location and cannot be sourced"
  return 1
fi
export MSDD_CODE


# Register our source.env in .bashrc
sed -i.bak '/microservices-datadriven/d' ~/.bashrc
echo "source $MSDD_CODE/workshops/dcms-oci/source.env" >>~/.bashrc


# Source the common variables and utils
source $MSDD_CODE/common/source.env


# Set the workshop variables
export DCMS_APP='grabdish'
export DCMS_WORKSHOP='dcms-oci'


# Create setup and teardown functions
function setup() {
  source $MSDD_WORKSHOP_CODE/$DCMS_WORKSHOP/setup.env
}
export -f setup
function teardown() {
  source $MSDD_WORKSHOP_CODE/$DCMS_WORKSHOP/teardown.env
}
export -f teardown
 

# Find workshop run state
cd $MSDD_CODE/..
export DCMS_STATE=$PWD/dcms-oci-run
if ! test -d $DCMS_STATE; then
  # Setup has not been executed yet
  return
fi


export DCMS_INFRA_STATE=$DCMS_STATE/infra
export DCMS_APP_STATE=$DCMS_STATE/$DCMS_APP
export DCMS_THREAD_STATE=$DCMS_STATE/threads
export DCMS_LOG_DIR=$DCMS_STATE/log


# Get the state_store
if test -f $DCMS_INFRA_STATE/state_store/output.env; then
  source $DCMS_STATE/infra/state_store/output.env
fi


# Get the setup output
if ! test -f $DCMS_STATE/output.env; then
  # Setup has not completed
  return
fi
source $DCMS_STATE/output.env


# Setup Grabdish Environment
export GRABDISH_HOME=$MSDD_CODE/$DCMS_APP
export GRABDISH_LOG=$DCMS_LOG_DIR
source $GRABDISH_HOME/source.env
cd $GRABDISH_HOME