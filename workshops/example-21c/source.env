#!/bin/bash
# Copyright (c) 2021 Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

export VIRTUAL_ENV=''
export USER=''
# set -eu

# Make sure this is run via source or .
if ! (return 0 2>/dev/null); then
  echo "ERROR: Usage 'source setup.sh'"
  return 0
fi


# Get the code location
MSDD_CODE="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../.." &> /dev/null && pwd )"
# Double check we have the right location
if ! test -d $MSDD_CODE/../microservices-datadriven; then
  echo "ERROR: This script $MSDD_CODE is in the wrong location and cannot be sourced"
  return 0
fi
export MSDD_CODE


# Get OS
EG21C_SETUP_OS=`uname`
case "$EG21C_SETUP_OS" in
  Linux | Darwin)
    ;;
  *)
    echo "Unsupported operating system $EG21C_SETUP_OS for setup"
    return 0
    ;;
esac


# Source the common variables and utils
source $MSDD_CODE/common/source.env


# Set the workshop variables
export EG21C_WORKSHOP='example-21c'


# Create setup, status, teardown and kill-all functions
function setup() {
  $MSDD_WORKSHOP_CODE/$EG21C_WORKSHOP/setup.sh
}
export -f setup

function teardown() {
  $MSDD_WORKSHOP_CODE/$EG21C_WORKSHOP/teardown.sh
}
export -f teardown

function kill-all() {
  cd $EG21C_STATE
  for f in `find . -name PID`; do
    kill $(<$f);
  done
}
export -f kill-all


cd $MSDD_CODE/..
export EG21C_RUN_DIR=$PWD/${EG21C_WORKSHOP}-run
export EG21C_VAULT=$EG21C_RUN_DIR/vault
export EG21C_STATE=$EG21C_RUN_DIR/state
export EG21C_LOG_DIR=$EG21C_RUN_DIR/log

mkdir -p $EG21C_RUN_DIR $EG21C_STATE $EG21C_VAULT $EG21C_LOG_DIR


# Get the setup output
if test "$(provisioning-get-status $EG21C_STATE)" == "applied"; then
  source $EG21C_STATE/output.env
else
  return 0
fi