apiVersion: v1
kind: Namespace
metadata:
  name: container-registry
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: container-registry-pv-claim
#   namespace: container-registry
# spec:
#   accessModes:
#     - ReadWriteOnce
#   volumeMode: Filesystem
#   resources:
#     requests:
#       storage: 20Gi
#   storageClassName: local-path
---
apiVersion: v1
kind: Service
metadata:
  name: container-registry
  namespace: container-registry
  labels:
    app: container-registry
spec:
  selector:
    app: container-registry
  type: ClusterIP
  # clusterIP: "{{ desktop_registry_ip }}"
  ports:
    - protocol: TCP
      targetPort: 5000
      port: 5000
      # nodePort: 31320
---      
apiVersion: v1
kind: Service
metadata:
  labels:
    app: container-registry
  name: container-registry-nodeport
  namespace: container-registry
spec:
  ports:
  - nodePort: 30100
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: container-registry
  type: NodePort
---  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: container-registry
  namespace: container-registry
  labels:
    app: container-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: container-registry
  template:
    metadata:
      labels:
        app: container-registry
    spec:
      containers:
        - image: container-registry.oracle.com/os/registry:v2.7.1.1
          name: container-registry
          imagePullPolicy: IfNotPresent
          env:
          - name: REGISTRY_AUTH
            value: "htpasswd"
          - name: REGISTRY_AUTH_HTPASSWD_REALM
            value: "Registry Realm"
          - name: REGISTRY_AUTH_HTPASSWD_PATH
            value: "/auth/htpasswd"
          - name: REGISTRY_HTTP_TLS_CERTIFICATE
            value: "/certs/tls.crt"
          - name: REGISTRY_HTTP_TLS_KEY
            value: "/certs/tls.key"
          ports:
            - containerPort: 5000
          volumeMounts:
          - name: registry-vol
            mountPath: /var/lib/registry
          - name: certs-vol
            mountPath: /certs
            readOnly: true
          - name: auth-vol
            mountPath: /auth
      volumes:
      - name: registry-vol
        emptyDir: {}
      - name: certs-vol
        secret:
          secretName: tls-certificate
      - name: auth-vol
        secret:
          secretName: auth-secret
---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6IHsicmVnaXN0cnk6NTAwMC9lYmFhcyI6IHsiYXV0aCI6ICIifX19
kind: Secret
metadata:
  name: registry-auth
  namespace: container-registry
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
data:
  registry.compartment: Ti9B
  registry.password: ""
  registry.pull_url: cmVnaXN0cnk6NTAwMC9lYmFhcw==
  registry.push_url: cmVnaXN0cnk6NTAwMC9lYmFhcw==
  registry.username: bG9jYWw=
kind: Secret
metadata:
  name: registry-login
  namespace: container-registry
type: Opaque
---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6IHsicmVnaXN0cnk6NTAwMC9lYmFhcyI6IHsiYXV0aCI6ICIifX19
kind: Secret
metadata:
  name: registry-pull-auth
  namespace: container-registry
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6IHsicmVnaXN0cnk6NTAwMC9lYmFhcyI6IHsiYXV0aCI6ICIifX19
kind: Secret
metadata:
  name: registry-push-auth
  namespace: container-registry
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
data:
  htpasswd: YWRtaW46JDJ5JDA1JC5MLjFMckJqajNGNnhCSlNSMkVhSC5BZk5hVWk5YkVsU2FKanpoYjFPamZHenlmbkFxUlhh
kind: Secret
metadata:
  name: auth-secret
  namespace: container-registry
type: Opaque