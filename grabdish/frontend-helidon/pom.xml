<?xml version="1.0" encoding="UTF-8"?>
<!--


##
## Copyright (c) 2021 Oracle and/or its affiliates.
## Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/


-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">


    <modelVersion>4.0.0</modelVersion>
    <artifactId>frontend-helidon</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>frontend-helidon</name>
    <description>frontend for data-driven helidon microservices demo</description>

    <parent>
        <groupId>io.helidon.applications</groupId>
        <artifactId>helidon-mp</artifactId>
        <version>2.3.1</version>
        <relativePath/>
    </parent>

    <properties>
        <maven.sources.skip>true</maven.sources.skip>
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <spotbugs.skip>true</spotbugs.skip>
        <dependenciesDirectory>libs</dependenciesDirectory>
        <docker.image.prefix>${env.DOCKER_REGISTRY}</docker.image.prefix>
    </properties>


    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
        </resources>
        <plugins>

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.4.13</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <repository>${env.DOCKER_REGISTRY}/${project.artifactId}</repository>
                    <tag>${env.IMAGE_VERSION}</tag>
                    <buildArgs>
                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${dependenciesDirectory}</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <includeScope>runtime</includeScope>
                            <excludeScope>test</excludeScope>
                            <useBaseVersion>false</useBaseVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>${dependenciesDirectory}</classpathPrefix>
                            <mainClass>io.helidon.microprofile.server.Main</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/docker</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

        <dependencies>
            <dependency>
                <groupId>io.helidon.microprofile.bundles</groupId>
                <artifactId>helidon-microprofile</artifactId>
            </dependency>
            <dependency>
                <groupId>io.helidon.tracing</groupId>
                <artifactId>helidon-tracing-jaeger</artifactId>
            </dependency>
            <dependency>
                <groupId>io.helidon.metrics</groupId>
                <artifactId>helidon-metrics</artifactId>
            </dependency>
            <dependency>
                <groupId>io.helidon.tracing</groupId>
                <artifactId>helidon-tracing-jaeger</artifactId>
            </dependency>
<!--            <dependency>-->
<!--                <groupId>io.helidon.metrics</groupId>-->
<!--                <artifactId>helidon-metrics-trace-exemplar</artifactId>-->
<!--                <scope>runtime</scope>-->
<!--            </dependency>-->
            <dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jandex</artifactId>
                <scope>runtime</scope>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>jakarta.activation</groupId>
                <artifactId>jakarta.activation-api</artifactId>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>javax.json.bind</groupId>
                <artifactId>javax.json.bind-api</artifactId>
                <version>1.0</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
            </dependency>
            <dependency>
                <groupId>io.helidon.microprofile</groupId>
                <artifactId>helidon-microprofile-security</artifactId>
            </dependency>
            <dependency>
                <groupId>io.helidon.security.providers</groupId>
                <artifactId>helidon-security-providers-http-auth</artifactId>
            </dependency>
<!--            if using oidc... -->
<!--            <dependency>-->
<!--                <groupId>io.helidon.microprofile</groupId>-->
<!--                <artifactId>helidon-microprofile-oidc</artifactId>-->
<!--            </dependency>-->
<!--            <dependency>-->
<!--                <groupId>io.helidon.security.providers</groupId>-->
<!--                <artifactId>helidon-security-providers-oidc</artifactId>-->
<!--            </dependency>-->
<!--            <dependency>-->
<!--                <groupId>io.helidon.security.providers</groupId>-->
<!--                <artifactId>helidon-security-providers-jwt</artifactId>-->
<!--            </dependency>-->
        </dependencies>

    </project>
