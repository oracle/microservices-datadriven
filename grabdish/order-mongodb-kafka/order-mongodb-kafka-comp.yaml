# Copyright (c) 2020, 2021, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
apiVersion: core.oam.dev/v1alpha2
kind: Component
metadata:
  name: order-mongodb-kafka-component
  namespace: msdataworkshop
spec:
  workload:
    apiVersion: oam.verrazzano.io/v1alpha1
    kind: VerrazzanoHelidonWorkload
    metadata:
      name: order-mongodb-kafka-workload
      labels:
        app: order
    spec:
      deploymentTemplate:
        metadata:
          name: order # this will be the deployment, pod, and service name
#          every port on each container will be exposed (mapped with same port number) and name of that serviceport would be containername + - + portnumber
        podSpec:
#          containers:
#            - name: hello-helidon-container
#              image: "ghcr.io/verrazzano/example-helidon-greet-app-v1:0.1.12-1-20210409130027-707ecc4"
#              ports:
#                - containerPort: 8080
#                  name: http
#        spec:
          containers:
            - name: order
              image: ${DOCKER_REGISTRY}/order-mongodb-kafka:0.1
              imagePullPolicy: Always
              env:
                - name: oracle.ucp.jdbc.PoolDataSource.orderpdb.user
                  value: "ORDERUSER"
                - name: oracle.ucp.jdbc.PoolDataSource.orderpdb.URL
                  value: "jdbc:oracle:thin:@%ORDER_PDB_NAME%_tp?TNS_ADMIN=/msdataworkshop/creds"
                - name: orderqueuename
                  value: "orderqueue"
                - name: inventoryqueuename
                  value: "inventoryqueue"
                - name: OCI_REGION
                  value: "${OCI_REGION-}"
                - name: VAULT_SECRET_OCID
                  value: "${VAULT_SECRET_OCID-}"
                - name: dbpassword
                  valueFrom:
                    secretKeyRef:
                      name: dbuser
                      key: dbpassword
                      optional: true #not needed/used if using VAULT_SECRET_OCID exists
              volumeMounts:
                - name: creds
                  mountPath: /msdataworkshop/creds
              ports:
                - containerPort: 8080
              livenessProbe:
                httpGet: #alternatives include exec with command, etc.
                  path: /health/live
                  port: 8080
                initialDelaySeconds: 220
                periodSeconds: 3
              readinessProbe:
                httpGet:
                  path: /health/ready
                  port: 8080
                initialDelaySeconds: 40
                periodSeconds: 3
          restartPolicy: Always
          volumes:
            - name: creds
              secret:
                secretName: order-db-tns-admin-secret