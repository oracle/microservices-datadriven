connect $ADMIN_USER/"$ADMIN_PASSWORD"@$DB_SVC

WHENEVER SQLERROR CONTINUE
DROP USER $AQ_USER CASCADE
DROP USER $ORDER_USER CASCADE
DROP USER $INVENTORY_USER CASCADE

WHENEVER SQLERROR EXIT 1
-- AQ User
CREATE USER $AQ_USER IDENTIFIED BY "$AQ_PASSWORD";
GRANT CREATE DATABASE LINK TO $AQ_USER;
GRANT unlimited tablespace to $AQ_USER;
GRANT connect, resource TO $AQ_USER;
GRANT aq_user_role TO $AQ_USER;
GRANT EXECUTE ON sys.dbms_aqadm TO $AQ_USER;
GRANT EXECUTE ON sys.dbms_aq TO $AQ_USER;

-- Order User
CREATE USER $ORDER_USER IDENTIFIED BY "$ORDER_PASSWORD";
GRANT unlimited tablespace to $ORDER_USER;
GRANT connect, resource TO $ORDER_USER;
GRANT aq_user_role TO $ORDER_USER;
GRANT AQ_ADMINISTRATOR_ROLE TO $ORDER_USER;
GRANT EXECUTE ON sys.dbms_aqadm TO $ORDER_USER;
GRANT EXECUTE ON sys.DBMS_AQIN  TO $ORDER_USER;
GRANT EXECUTE ON sys.dbms_aq TO $ORDER_USER;
GRANT SODA_APP to $ORDER_USER;

-- Inventory User
CREATE USER $INVENTORY_USER IDENTIFIED BY "$INVENTORY_PASSWORD";
GRANT unlimited tablespace to $INVENTORY_USER;
GRANT connect, resource TO $INVENTORY_USER;
GRANT aq_user_role TO $INVENTORY_USER;
GRANT AQ_ADMINISTRATOR_ROLE TO $INVENTORY_USER;
GRANT EXECUTE ON sys.dbms_aqadm TO $INVENTORY_USER;
GRANT EXECUTE ON sys.DBMS_AQIN  TO $INVENTORY_USER;
GRANT EXECUTE ON sys.dbms_aq TO $INVENTORY_USER;