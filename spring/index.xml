<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Oracle Backend for Microservices and AI</title>
    <link>https://oracle.github.io/microservices-datadriven/spring/</link>
    <description>Recent content on Oracle Backend for Microservices and AI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://oracle.github.io/microservices-datadriven/spring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Development Environment Setup</title>
      <link>https://oracle.github.io/microservices-datadriven/spring/development/setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://oracle.github.io/microservices-datadriven/spring/development/setup/</guid>
      <description>This page provides details on how to set up your development environment to work with Oracle Backend for Microservices and AI.&#xA;The following platforms are recommended for a development environment:&#xA;Microsoft Windows 10 or 11, preferably with Windows Subsystem for Linux 2 macOS (11 or later recommended) on Intel or Apple silicon Linux, for example Oracle Linux, Ubuntu, and so on. The following tools are recommended for a development environment:</description>
    </item>
    <item>
      <title>Oracle Spring Boot Starter for AQ/JMS</title>
      <link>https://oracle.github.io/microservices-datadriven/spring/starters/aqjms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://oracle.github.io/microservices-datadriven/spring/starters/aqjms/</guid>
      <description>This starter provides support for Oracle Transactional Event Queues (TxEventQ) and Oracle Advanced Queuing (AQ) as Java Message Service (JMS) providers. It depends on the Universal Connection Pool (UCP) starter.&#xA;Note: By default, the data Source and JMS Connection Factory that the starter injects into your application share the same database transaction. This means that you can start a transaction, read from a queue, perform an update operation, and then commit or rollback that whole unit of work, including the message consumption.</description>
    </item>
    <item>
      <title>Oracle Spring Boot Starter for Universal Connection Pool</title>
      <link>https://oracle.github.io/microservices-datadriven/spring/starters/ucp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://oracle.github.io/microservices-datadriven/spring/starters/ucp/</guid>
      <description>This starter provides a connection (data source) to an Oracle Database using Universal Connection Pool, which provides an efficient way to use database connections.&#xA;To add this starter to your project, add this Maven dependency:&#xA;&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.oracle.database.spring&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;oracle-spring-boot-starter-ucp&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;23.4.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; For Gradle projects, add this dependency:&#xA;implementation &amp;#39;com.oracle.database.spring:oracle-spring-boot-starter-ucp:23.4.0&amp;#39; An Oracle data source is injected into your application and can be used normally. You must configure the data source as shown below, and you should also add either Spring Data JDBC or Spring Data JPA to your project.</description>
    </item>
    <item>
      <title>Oracle Spring Boot Starter for Wallet</title>
      <link>https://oracle.github.io/microservices-datadriven/spring/starters/wallet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://oracle.github.io/microservices-datadriven/spring/starters/wallet/</guid>
      <description>This starter provides support for wallet-based authentication for Oracle Database connections. It depends on the UCP starter.&#xA;To add this starter to your project, add this Maven dependency:&#xA;&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.oracle.database.spring&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;oracle-spring-boot-starter-wallet&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;23.4.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; For Gradle projects, add this dependency:&#xA;implementation &amp;#39;com.oracle.database.spring:oracle-spring-boot-starter-wallet:23.4.0&amp;#39; You need to provide the wallet to your application. You can specify the location in the spring.datasource.url as shown in the following example.&#xA;jdbc:oracle:thin:@mydb_tp?TNS_ADMIN=/oracle/tnsadmin Note that the location specified in the sqlnet.</description>
    </item>
    <item>
      <title>Predefined Variables</title>
      <link>https://oracle.github.io/microservices-datadriven/spring/development/envvars/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://oracle.github.io/microservices-datadriven/spring/development/envvars/</guid>
      <description>When you deploy a Spring Boot application using the Oracle Backend for Microservices and AI CLI or Visual Code extension, a number of predefined environment variables will be injected into the pod definition. You may reference any of these variables in your application.&#xA;The predefined variables are as follows:&#xA;app.container.port, for example 8080.&#xA;This sets the listen port for the pod and service. The Spring Boot application will listen on this port.</description>
    </item>
    <item>
      <title>Project Structure</title>
      <link>https://oracle.github.io/microservices-datadriven/spring/development/project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://oracle.github.io/microservices-datadriven/spring/development/project/</guid>
      <description>To take advantage of the built-in platform services, Oracle recommends using the following project structure.&#xA;Recommended versions:&#xA;Spring Boot 3.3.x Spring Cloud 2023.x.x Java 21 (or 17) Table of Contents:&#xA;Dependencies Spring Application Configuration Data Sources Liquibase Oracle Transaction Manager for Microservices Spring Config Server Tracing Dependencies Oracle recommends adding the following dependencies to your application so that it can take advantage of the built-in platform services. For example:&#xA;&amp;lt;properties&amp;gt; &amp;lt;project.</description>
    </item>
  </channel>
</rss>
